{"version":3,"sources":["store/initials.tsx","store/actions.tsx","store/store.tsx","store/reducer.tsx","components/ArticlePage/ArticlePage.tsx","components/Icons/Icons.tsx","components/Inputs/Inputs.tsx","styles/styles.tsx","images/icons/search.svg","components/Searching/Searching.tsx","controllers/api.tsx","components/Hamepage/Homepage.tsx","controllers/controller.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["state","news","idToDisplay","searchData","GET_DATA_FROM_SERVER","actions","array","type","store","createStore","initialState","console","log","map","item","ArticlePage","className","Icons","props","style","backgroundRepeat","backgroundPosition","backgroundSize","width","heightValue","height","backgroundImage","url","Inputs","onChange","event","setUserInputs","target","value","styles","id","placeholder","inputStyle","padding","fontSize","fontFamily","fontWeight","lineHeight","color","boxSizing","border","outline","useStyles","makeStyles","searchingSection","margin","paper","display","alignItems","boxShadow","searchTitle","textAlign","resultOfSearch","borderBottom","Searching","classes","useState","userInputs","Paper","component","marginRight","searchIcon","getDataFromServer","a","fetch","response","json","result","Homepage","amount","useSelector","usePrepareState","length","Main","App","dispatch","useDispatch","useEffect","then","promise","useGetDataFromServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d97327a.chunk.js","sourcesContent":["import { State } from '../types/types';\n\nexport const state: State ={\n  news: [],\n  idToDisplay: 0,\n  searchData: '',\n};","import { Action, INews } from '../types/types';\n\nexport const GET_DATA_FROM_SERVER = 'GET_DATA_FROM_SERVER';\nexport const GET_INFO_FROM_USER = 'GET_INFO_FROM_USER';\nexport const ITEM_TO_DISPLAY = 'ITEM_TO_DISPLAY';\n\nexport const actions = {\n  getFromServer: (array: INews[]) => ({ type: GET_DATA_FROM_SERVER, array }),\n  getInfoFromUser: (value: string | number): Action => ({ type: GET_INFO_FROM_USER, value }),\n  itemToDisplay: (value: string | number): Action => ({ type: ITEM_TO_DISPLAY, value }),\n};\n","import { createStore } from 'redux';\nimport { state } from './initials';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, state);","import { GET_DATA_FROM_SERVER } from './actions';\n\nimport { State, Action } from '../types/types';\nimport { state as initialState } from './initials';\n\nexport function reducer(state: State = initialState, actions: Action): State {\nconsole.log('reducer: ', actions)\n\n  switch (actions.type) {\n    case GET_DATA_FROM_SERVER:\n      console.log('get from server: ', actions.array)\n      return {\n        ...state,\n        news: actions.array ? actions.array.map(item => ({...item})) : [],\n      };\n\n    default:\n      return state;\n  };\n};","import './ArticlePage.scss';\n\nexport const ArticlePage = () => {\n\n  return (\n    <div className=\"articlePage\">\n      Article Info\n    </div>\n  );\n};\n","type Props = {\n  url: string,\n  widthValue?: number,\n  heightValue?: number,\n};\n\nexport const Icons = (props: Props): JSX.Element => {\n\n  return (\n    <div\n      style={\n        {\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          width: props.heightValue,\n          height: props.heightValue,\n          backgroundImage: `url(${props.url})`,\n        }\n      }\n    />\n  );\n};\n","import { CSSProperties } from \"react\";\n\ntype Props = {\n  id?: string,\n  value: string,\n  styles: CSSProperties,\n  setUserInputs: React.Dispatch<React.SetStateAction<string>>,\n};\n\nexport const Inputs = (props: Props): JSX.Element => {\n\n  return (\n    <input\n      onChange={(event) => props.setUserInputs(event.target.value)}\n      style={props.styles}\n      value={props.value}\n      id={props.id}\n      placeholder=\"enter a movie title\"\n    />\n  );\n};\n","import CSS from 'csstype';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const inputStyle: CSS.Properties = {\n  padding:'0',\n  width: '100%',\n  height: '24',\n  fontSize: '16px',\n  fontFamily: 'Montserrat',\n  fontWeight: 400,\n  lineHeight: '24px',\n  color:'#575757',\n  boxSizing: 'border-box',\n  border: 'none',\n  outline: 'none',\n};\n\nexport const useStyles = makeStyles(() => ({\n  searchingSection: {\n    margin: '0 0 45px',\n    width: '600px',\n    '@media (max-width: 1000px)': {\n      width: '500px',\n    },\n    '@media (max-width: 800px)': {\n      width: '400px',\n    },\n    '@media (max-width: 600px)': {\n      width: '330px',\n    },\n    '@media (max-width: 400px)': {\n      width: '100%',\n    },\n  },\n  paper: {\n    margin: '0 0 40px',\n    padding: '15px 20px',\n    display: 'flex',\n    alignItems: 'center',\n    height: '50px',\n    boxSizing: 'border-box',\n    border: '1px solid #eaeaea',\n    boxShadow: '0px 8px 24px rgba(0, 0, 0, 0.05)',\n  },\n  searchTitle: {\n    margin: '0 0 10px',\n    padding:'0',\n    textAlign: 'left',\n    fontFamily: 'Montserrat',\n    fontSize: '16px',\n    lineHeight: '20px',\n    fontWeight: 600,\n    color:'#363636',\n  },\n  resultOfSearch: {\n    margin: '0 0 45px',\n    padding: '0 0 5px',\n    textAlign: 'left',\n    fontFamily: 'Montserrat',\n    fontSize: '16px',\n    lineHeight: '20px',\n    fontWeight: 600,\n    color:'#363636',\n    borderBottom: '1px solid #eaeaea',\n  },\n}));\n","export default __webpack_public_path__ + \"static/media/search.fa665393.svg\";","import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nimport { Icons } from '../Icons/Icons';\nimport { Inputs } from '../Inputs/Inputs';\nimport { inputStyle, useStyles } from '../../styles/styles';\n\nimport searchIcon from '../../images/icons/search.svg';\n\nexport default function Searching() {\n  const classes = useStyles();\n  const [userInputs, setUserInputs] = useState('');\n\n  return (\n    <section className={classes.searchingSection}>\n\n      <h2 className={classes.searchTitle}>Filter by keywords</h2>\n\n      <Paper component=\"form\" className={classes.paper}>\n\n        <div style={{ marginRight: '20px' }}>\n          <Icons\n            url={searchIcon}\n            heightValue={20}\n          />\n        </div>\n\n        <div style={{width: '100%'}}>\n          <Inputs\n            id='search'\n            value={userInputs}\n            setUserInputs={setUserInputs}\n            styles={inputStyle}\n          />\n        </div>\n\n      </Paper>\n\n    </section>\n  );\n}\n","import { INews } from '../types/types';\n\nconst url: string = 'https://api.spaceflightnewsapi.net/v3/articles';\n\nexport const getDataFromServer = async (): Promise<INews[]> => {\n  const response = await fetch(url);\n  const result = await response.json();\n\n  return result;\n};\n","import Searching from '../Searching/Searching';\nimport { useStyles } from '../../styles/styles';\n\nimport './Homepage.scss';\n\nimport { usePrepareState } from '../../controllers/controller';\n\nexport const Homepage = () => {\n  const classes = useStyles();\n  const amount: number | null = usePrepareState().news.length;\n\n  return (\n    <div className=\"homepage\">\n\n      <Searching />\n      <p className={classes.resultOfSearch}>Result: {amount}</p>\n\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { State } from '../types/types';\nimport { actions } from '../store/actions';\nimport { getDataFromServer } from '../controllers/api';\nimport { useEffect } from 'react';\n\nexport const useGetDataFromServer = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getDataFromServer().then(promise => {\n      dispatch(actions.getFromServer(promise));\n    });\n  }, [dispatch]);\n\n};\n\nexport const usePrepareState = () => {\n  const state = useSelector((state: State) => state);\n  console.log('state to display: ', state.news);\n\n  return useSelector((state: State) => state);\n};\n","import { ArticlePage } from '../ArticlePage/ArticlePage';\nimport { Homepage } from '../Hamepage/Homepage';\nimport './Main.scss';\n\nexport const Main = () => {\n\n  return (\n    <div className=\"main\">\n      <Homepage />\n      <ArticlePage />\n    </div>\n  );\n};\n","import './App.scss';\nimport { Main } from './components/Main/Main';\n\nimport {useGetDataFromServer } from './controllers/controller';\n\nfunction App() {\n  useGetDataFromServer();\n\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}